pipeline {
    agent any

    environment {
        // Define Docker image name and tag
        IMAGE_NAME = 'nginx'
        IMAGE_TAG = 'latest'
        CONTAINER_NAME = 'nginx-container'
        HOST_PORT = '8092'
        CONTAINER_PORT = '80'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from GitHub
                git branch: 'main', url: 'https://github.com/edisaputroo/docker-container.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from the Dockerfile
                    docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Run the Docker container in detached mode
                    docker.image("${IMAGE_NAME}:${IMAGE_TAG}").run(
                        "-d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${CONTAINER_PORT}"
                    )
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Example of running a test or validation script
                    echo 'Running tests...'
                    // Add commands to test the application if needed
                    // For example, you might use curl to check the response
                    sh 'curl -I http://localhost:${HOST_PORT}'
                }
            }
        }
    }

    post {
        always {
            script {
                // Cleanup: Stop and remove the Docker container
                sh "docker stop ${CONTAINER_NAME} || true"
                sh "docker rm ${CONTAINER_NAME} || true"
            }
            echo 'Pipeline completed!'
        }
    }
}
